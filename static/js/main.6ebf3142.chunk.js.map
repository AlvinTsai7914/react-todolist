{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContent","styled","div","props","$isDone","TodoButtonWrapper","TodoItemWrapper","Button","button","TodoItem","todo","handleDeleteTodo","handleToggleIsDone","data-todo-id","id","isDone","content","onClick","TodoWrapper","TodoItemsWrapper","FilterWrapper","Title","h1","Input","input","App","useState","todos","setTodos","value","setValue","filter","setFilter","handleButtonClick","e","console","log","alert","map","handleChangeFilter","className","type","placeholder","onChange","target","onKeyPress","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ebf3142.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst TodoContent = styled.div`\r\n  color: black;\r\n  font-size: 20px;\r\n  ${(props) => props.$isDone && 'text-decoration: line-through; '}\r\n`;\r\n\r\nconst TodoButtonWrapper = styled.div`\r\n  opacity: 0;\r\n  transition: opacity 0.1s ease-in;\r\n`;\r\n\r\nconst TodoItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 16px;\r\n  border: 0px solid black;\r\n\r\n  &:hover ${TodoButtonWrapper} {\r\n    opacity: 1;\r\n  }\r\n\r\n  & + & {\r\n    border-top: 1px solid #d2d2d2;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 10px;\r\n  color: #6b6b6b;\r\n  background-color: white;\r\n  border: 1px solid #d2d2d2;\r\n  border-radius: 6px;\r\n  box-shadow: 1px 2px 2px #808080c9;\r\n  transition: all 0.1s ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  & + & {\r\n    margin-left: 4px;\r\n  }\r\n`;\r\n\r\nfunction TodoItem({ todo, handleDeleteTodo, handleToggleIsDone }) {\r\n  return (\r\n    <TodoItemWrapper data-todo-id={todo.id}>\r\n      <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\r\n      <TodoButtonWrapper>\r\n        <Button\r\n          onClick={() => {\r\n            handleToggleIsDone(todo.id);\r\n          }}\r\n        >\r\n          {todo.isDone ? '未完成' : '已完成'}\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            handleDeleteTodo(todo.id);\r\n          }}\r\n        >\r\n          刪除\r\n        </Button>\r\n      </TodoButtonWrapper>\r\n    </TodoItemWrapper>\r\n  );\r\n}\r\n\r\nexport { TodoItem, Button };\r\n","import './App.css';\nimport { TodoItem, Button } from './TodoItem';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 100px 200px;\n`;\n\nconst TodoItemsWrapper = styled.div`\n  border: 1px solid #d2d2d2;\n  border-radius: 12px;\n`;\n\nconst FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding-bottom: 10px;\n`;\nconst Title = styled.h1`\n  margin: 0;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  width: 50%;\n  font-size: 20px;\n  border: 1px solid #d2d2d2;\n`;\n\nlet id = 1;\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [value, setValue] = useState('');\n  const [filter, setFilter] = useState('all');\n  const handleButtonClick = (e) => {\n    console.log(todos);\n    if (value === '') {\n      alert('請填寫待辦事項');\n      return;\n    }\n    setTodos([{ id, content: value, isDone: false }, ...todos]);\n    setValue('');\n    id++;\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleButtonClick();\n    }\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleChangeFilter = (filter) => {\n    console.log(filter);\n    setFilter(filter);\n  };\n\n  const handleClearTodos = () => {\n    setTodos([]);\n  };\n\n  return (\n    <TodoWrapper className=\"App\">\n      <Title>Todo List</Title>\n      <div>\n        <Input type=\"text\" placeholder=\"todo\" value={value} onChange={handleInputChange} onKeyPress={handleKeyPress} />\n        <Button\n          onClick={(e) => {\n            handleButtonClick(e);\n          }}\n        >\n          Add\n        </Button>\n      </div>\n      <FilterWrapper>\n        <Button\n          onClick={() => {\n            handleChangeFilter('all');\n          }}\n        >\n          全部\n        </Button>\n        <Button\n          onClick={() => {\n            handleChangeFilter('isDone');\n          }}\n        >\n          已完成\n        </Button>\n        <Button\n          onClick={() => {\n            handleChangeFilter('unDone');\n          }}\n        >\n          未完成\n        </Button>\n        <Button\n          onClick={() => {\n            handleClearTodos();\n          }}\n        >\n          清空\n        </Button>\n      </FilterWrapper>\n      <TodoItemsWrapper>\n        {todos\n          .filter((todo) => (filter === 'isDone' ? todo.isDone : true))\n          .filter((todo) => (filter === 'unDone' ? !todo.isDone : true))\n          .map((todo) => {\n            return (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                handleDeleteTodo={handleDeleteTodo}\n                handleToggleIsDone={handleToggleIsDone}\n              />\n            );\n          })}\n      </TodoItemsWrapper>\n    </TodoWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}